# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches:
      - '7.*'
      - 'jsi-patch-1'
    path:
      - '.env'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains two jobs, build and publish.
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - uses: c-py/action-dotenv-to-setenv@v2
        with:
          env-file: .env

      - uses: docker/setup-buildx-action@v1

      - uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

#      # If snapshot version, don't execute this Action
#      - name: Exit on snapshot build
#        if: contains( env.XP_VERSION, '-SNAPSHOT')
#        run: exit 1

      - name: Set run date
        run: echo "BUILD_DATE_TIME=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_ENV

      - name: Docker Build
        if: ${{ ! contains( env.XP_VERSION, '-SNAPSHOT') }}
        run: docker build ${{ env.DOCKER_BUILD_EXTRA_ARGS }} --build-arg build_date=${{ env.BUILD_DATE_TIME }} --build-arg build_base_image=${{ env.BASE_IMAGE }} --build-arg build_distro_version=${{ env.XP_VERSION }} -t ${{ env.IMAGE_FULL_TAG }} .

      - name: Docker publish
        if: ${{ ! contains( env.XP_VERSION, '-SNAPSHOT') }}
        run: |
          for p in $PUSH_TO
          do
            echo "Pushing $p ..."
            docker tag $IMAGE_FULL_TAG $p
            docker push $p
          done
          
          
          
          
          
          
